{"version":3,"sources":["App.js","reportWebVitals.js","index.js","sampleData/sample_obj.js"],"names":["Header","Layout","Content","Option","Footer","Select","App","props","fetchFunc","fetch","method","headers","body","JSON","stringify","state","age","sex","height","weight","sbp","dbp","surgery_part","lt_kidney_vol","rt_kidney_vol","total_vol","remnant_vol","remnant_vol_per","predicted_gfr_total","predicted_gfr_lt","predicted_gfr_rt","normalized_gfr","relative_uptake_rate_lt","relative_uptake_rate_rt","residual_relative_uptake_rate","remnant_normalized_gfr","serum_uric_acid","ldl","triglycerid","serum_creatinine","egfr","cystatin_c","cystatin_c_egfr","creatinine_clearance","hr_urine_creatinine","na_hr_urine","volume_hr_urine","bmi","output","this","setState","obj","console","log","className","style","background","fontFamily","color","marginLeft","fontSize","padding","border","width","marginTop","display","marginBottom","margin","Item","fontWeight","onChange","event","target","value","defaultValue","String","Math","sqrt","disabled","type","size","backgroundColor","marginRight","onClick","then","res","json","catch","err","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.68dedb49.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Layout,\n  Breadcrumb,\n  Input,\n  Divider,\n  Button,\n  Select,\n  Space,\n} from \"antd\";\nimport { obj } from \"./sampleData/sample_obj\";\nimport \"./App.css\";\n\nconst { Header, Content, Footer } = Layout;\nconst { Option } = Select;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age: null,\n      sex: null,\n      height: null,\n      weight: null,\n      sbp: null,\n      dbp: null,\n      surgery_part: null,\n      lt_kidney_vol: null,\n      rt_kidney_vol: null,\n      total_vol: null,\n      remnant_vol: null,\n      remnant_vol_per: null,\n      predicted_gfr_total: null,\n      predicted_gfr_lt: null,\n      predicted_gfr_rt: null,\n      normalized_gfr: null,\n      relative_uptake_rate_lt: null,\n      relative_uptake_rate_rt: null,\n      residual_relative_uptake_rate: null,\n      remnant_normalized_gfr: null,\n      serum_uric_acid: null,\n      ldl: null,\n      triglycerid: null,\n      serum_creatinine: null,\n      egfr: null,\n      cystatin_c: null,\n      cystatin_c_egfr: null,\n      creatinine_clearance: null,\n      hr_urine_creatinine: null,\n      na_hr_urine: null,\n      volume_hr_urine: null,\n      bmi: null,\n      output: null,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ ...obj });\n  }\n\n  fetchFunc = () => {\n    return fetch(\"http://13.125.121.209:5000/home\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        ...this.state,\n      }),\n    });\n  };\n\n  render() {\n    console.log(\"App.js rendering.. \", this.state);\n    // console.log(String(1));\n    // console.log(obj);\n\n    return (\n      <Layout className=\"layout\">\n        <Header style={{ height: \"5vh\", background: \"white\" }}>\n          <div\n            style={{\n              fontFamily: \"serif\",\n              color: \"#0e7542\",\n              marginLeft: 10,\n              fontSize: 30,\n            }}\n          >\n            KT donor Calculator\n          </div>\n          <div />\n          {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n            {new Array(0).fill(null).map((_, index) => {\n              const key = index + 1;\n              return <Menu.Item key={key}>{`nav ${key}`}</Menu.Item>;\n            })}\n          </Menu> */}\n        </Header>\n        <Content\n          style={{\n            padding: \"0 50px\",\n            height: \"85vh\",\n            background: \"white\",\n          }}\n        >\n          <div\n            style={{\n              border: \"1px solid #989c9a\",\n              height: 860,\n              width: 700,\n              marginTop: 20,\n            }}\n          >\n            <div style={{ display: \"flex\", marginBottom: -20 }}>\n              <div>\n                <Breadcrumb style={{ margin: 10 }}>\n                  <Breadcrumb.Item>\n                    <text\n                      style={{\n                        fontSize: 17,\n                        fontWeight: 500,\n                        color: \"#2b6e4d\",\n                      }}\n                    >\n                      Baseline information\n                    </text>\n                  </Breadcrumb.Item>\n                </Breadcrumb>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>수술시 나이</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ age: event.target.value });\n                    }}\n                    value={this.state.age}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>성별</div>\n                  <Select\n                    defaultValue={this.state.sex}\n                    style={{ width: 100 }}\n                    onChange={(sex) => {\n                      this.setState({ sex: sex });\n                    }}\n                  >\n                    <Option value=\"M\">{\"M\"}</Option>\n                    <Option value=\"F\">{\"F\"}</Option>\n                  </Select>\n                  {/* <Input\n                    onChange={(event) => {\n                      this.setState({ sex: event.target.value });\n                    }}\n                    value={this.state.sex}\n                  /> */}\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Height (cm)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        height: event.target.value,\n                        bmi:\n                          ((this.state.weight /\n                            (this.state.height / 100) ** 2) *\n                            100) /\n                          100,\n                      });\n                    }}\n                    value={this.state.height}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Weight (kg)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        weight: event.target.value,\n                        bmi:\n                          ((this.state.weight /\n                            (this.state.height / 100) ** 2) *\n                            100) /\n                          100,\n                      });\n                    }}\n                    value={this.state.weight}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>SBP</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ sbp: event.target.value });\n                    }}\n                    value={this.state.sbp}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>DBP</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ dbp: event.target.value });\n                    }}\n                    value={this.state.dbp}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>수술부위 (lt: 1, rt:2)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        surgery_part: String(event.target.value),\n                      });\n                    }}\n                    value={this.state.surgery_part}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>bmi</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        bmi: this.state.weight / Math.sqrt(this.state.height),\n                      });\n                    }}\n                    value={this.state.bmi}\n                    disabled={true}\n                  />\n                </div>\n              </div>\n              <div>\n                <Breadcrumb style={{ margin: \"10px\" }}>\n                  <Breadcrumb.Item>\n                    <text\n                      style={{\n                        fontSize: 17,\n                        fontWeight: 500,\n                        color: \"#2b6e4d\",\n                      }}\n                    >\n                      Test result\n                    </text>\n                  </Breadcrumb.Item>\n                </Breadcrumb>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Serum uric acid</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ serum_uric_acid: event.target.value });\n                    }}\n                    value={this.state.serum_uric_acid}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>LDL</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ ldl: event.target.value });\n                    }}\n                    value={this.state.ldl}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Triglycerid</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ triglycerid: event.target.value });\n                    }}\n                    value={this.state.triglycerid}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Serum creatinine</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ serum_creatinine: event.target.value });\n                    }}\n                    value={this.state.serum_creatinine}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>eGFR</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ egfr: event.target.value });\n                    }}\n                    value={this.state.egfr}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Cystatin-C</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ cystatin_c: event.target.value });\n                    }}\n                    value={this.state.cystatin_c}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Cystatin-C eGFR</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ cystatin_c_egfr: event.target.value });\n                    }}\n                    value={this.state.cystatin_c_egfr}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Creatinine clearance</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        creatinine_clearance: event.target.value,\n                      });\n                    }}\n                    value={this.state.creatinine_clearance}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>24hr urine creatinine</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        hr_urine_creatinine: event.target.value,\n                      });\n                    }}\n                    value={this.state.hr_urine_creatinine}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Na, 24hr urine</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ na_hr_urine: event.target.value });\n                    }}\n                    value={this.state.na_hr_urine}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Volume 24hr urine</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ volume_hr_urine: event.target.value });\n                    }}\n                    value={this.state.volume_hr_urine}\n                  />\n                </div>\n              </div>\n              <div>\n                <Breadcrumb style={{ margin: \"10px\" }}>\n                  <Breadcrumb.Item>\n                    <text\n                      style={{\n                        fontSize: 17,\n                        fontWeight: 500,\n                        color: \"#2b6e4d\",\n                      }}\n                    >\n                      CT result\n                    </text>\n                  </Breadcrumb.Item>\n                </Breadcrumb>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Lt.Kidney volume</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ lt_kidney_vol: event.target.value });\n                    }}\n                    value={this.state.lt_kidney_vol}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Rt.Kidney volume</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ rt_kidney_vol: event.target.value });\n                    }}\n                    value={this.state.rt_kidney_vol}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Total volume</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ total_vol: event.target.value });\n                    }}\n                    value={this.state.total_vol}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Remnant volume</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ remnant_vol: event.target.value });\n                    }}\n                    value={this.state.remnant_vol}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Remnant Volume percentage</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ remnant_vol_per: event.target.value });\n                    }}\n                    value={this.state.remnant_vol_per}\n                  />\n                </div>\n              </div>\n              <div>\n                <Breadcrumb style={{ margin: \"10px\" }}>\n                  <Breadcrumb.Item>\n                    <text\n                      style={{\n                        fontSize: 17,\n                        fontWeight: 500,\n                        color: \"#2b6e4d\",\n                      }}\n                    >\n                      DTPA result\n                    </text>\n                  </Breadcrumb.Item>\n                </Breadcrumb>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Predicted GFR, total</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        predicted_gfr_total: event.target.value,\n                      });\n                    }}\n                    value={this.state.predicted_gfr_total}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Predicted GFR, Lt</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ predicted_gfr_lt: event.target.value });\n                    }}\n                    value={this.state.predicted_gfr_lt}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Predicted GFR, Rt</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ predicted_gfr_rt: event.target.value });\n                    }}\n                    value={this.state.predicted_gfr_rt}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Normalized GFR</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({ normalized_gfr: event.target.value });\n                    }}\n                    value={this.state.normalized_gfr}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>상대섭취율(Lt, %)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        relative_uptake_rate_lt: event.target.value,\n                      });\n                    }}\n                    value={this.state.relative_uptake_rate_lt}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>상대섭취율(Rt, %)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        relative_uptake_rate_rt: event.target.value,\n                      });\n                    }}\n                    value={this.state.relative_uptake_rate_rt}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>잔여상대섭취율(%)</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        residual_relative_uptake_rate: event.target.value,\n                      });\n                    }}\n                    value={this.state.residual_relative_uptake_rate}\n                  />\n                </div>\n                <div style={{ margin: 10 }}>\n                  <div style={{ marginLeft: 5 }}>Remant normalized GFR</div>\n                  <Input\n                    onChange={(event) => {\n                      this.setState({\n                        remnant_normalized_gfr: event.target.value,\n                      });\n                    }}\n                    value={this.state.remnant_normalized_gfr}\n                  />\n                </div>\n              </div>\n            </div>\n            <Divider />\n            <div style={{}}>\n              <div style={{ display: \"flex\" }}>\n                <div\n                  style={{\n                    border: \"1px solid #cccfce\",\n                    width: \"65vw\",\n                    height: \"8vh\",\n                    marginLeft: 20,\n                    padding: 5,\n                  }}\n                >\n                  {this.state.output == null ? null : (\n                    <div>\n                      수술 이후 예상되는 환자의 eGFR은\n                      {\n                        <span style={{ fontWeight: \"bold\" }}>\n                          {\" \" + this.state.output + \" \"}\n                        </span>\n                      }\n                      입니다.\n                    </div>\n                  )}\n                </div>\n                <Button\n                  type=\"primary\"\n                  size=\"large\"\n                  style={{\n                    backgroundColor: \"#2b6e4d\",\n                    marginLeft: 15,\n                    marginRight: 20,\n                    width: \"15vw\",\n                    height: \"8vh\",\n                    fontFamily: \"unset\",\n                    fontSize: 25,\n                  }}\n                  onClick={() => {\n                    this.fetchFunc()\n                      .then((res) => {\n                        return res.json();\n                      })\n                      .then((res) => {\n                        console.log(res);\n                        this.setState({ output: res.output });\n                      })\n                      .catch((err) => {\n                        console.log(\"통신 에러 -- \", err);\n                      });\n                  }}\n                >\n                  submit\n                </Button>\n              </div>\n            </div>\n            <div style={{ display: \"flex\" }}></div>\n          </div>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const obj = {\n  age: 45,\n  sex: \"F\",\n  height: 160,\n  weight: 65.4,\n  sbp: 126,\n  dbp: 88,\n  surgery_part: \"1\",\n  lt_kidney_vol: 112,\n  rt_kidney_vol: 134,\n  total_vol: 246,\n  remnant_vol: 134,\n  remnant_vol_per: 54.5,\n  predicted_gfr_total: 109.66,\n  predicted_gfr_lt: 58.36,\n  predicted_gfr_rt: 51.3,\n  normalized_gfr: 113.04,\n  relative_uptake_rate_lt: 53.22,\n  relative_uptake_rate_rt: 46.78,\n  residual_relative_uptake_rate: 46.78,\n  remnant_normalized_gfr: 52.9,\n  serum_uric_acid: 2.6,\n  ldl: 124,\n  triglycerid: 120,\n  serum_creatinine: 0.83,\n  egfr: 85.4,\n  cystatin_c: 0,\n  cystatin_c_egfr: 0,\n  creatinine_clearance: 79,\n  hr_urine_creatinine: 0.9,\n  na_hr_urine: 101,\n  volume_hr_urine: 1000,\n  bmi: 25.54,\n  output: null,\n};\n\nmodule.exports = {\n  obj,\n};\n"],"sourceRoot":""}